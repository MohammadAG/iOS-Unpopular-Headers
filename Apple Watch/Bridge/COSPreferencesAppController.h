//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "UIApplication.h"

#import "COSGetStartedViewControllerDelegate.h"
#import "MCProfileConnectionObserver.h"
#import "PBBridgeConnectionDelegate.h"
#import "PSSplitViewControllerNavigationDelegate.h"
#import "SKUIApplicationDelegate.h"
#import "UIApplicationDelegate.h"
#import "UISplitViewControllerDelegate.h"

@class CADisplayLink, COSGetStartedViewController, COSPreferencesRootController, COSSetupController, NPSDomainAccessor, NRDevice, NSString, NSTimer, PBBridgeCompanionController, PSSplitViewController, SKUIApplicationController, UIAlertView, UILabel, UIViewController, UIWindow;

@interface COSPreferencesAppController : UIApplication <PBBridgeConnectionDelegate, PSSplitViewControllerNavigationDelegate, SKUIApplicationDelegate, UISplitViewControllerDelegate, COSGetStartedViewControllerDelegate, UIApplicationDelegate, MCProfileConnectionObserver>
{
    _Bool _isLocked;
    _Bool _loadingExternalURL;
    long long _networkStartCount;
    double _timeoutLimit;
    _Bool _settingsWasResigned;
    unsigned int _rootDomainConnect;
    unsigned int _pmNotifier;
    struct IONotificationPort *_systemPowerPortRef;
    struct __CFRunLoopSource *_pmSource;
    _Bool _syncTrapEnabled;
    _Bool _syncTrapCompleted;
    _Bool _isActivated;
    _Bool _isResetting;
    _Bool _isUpdatingGizmoInSetupFlow;
    _Bool _launchedByNanoRegistry;
    _Bool _firstLaunch;
    _Bool _backgrounded;
    UIWindow *_window;
    COSPreferencesRootController *_settingsController;
    PSSplitViewController *_settingsSplitViewController;
    NPSDomainAccessor *_perGizmoBridgeDomain;
    PBBridgeCompanionController *_bridgeController;
    NRDevice *_pairedGizmo;
    unsigned long long _backgroundTaskID;
    NSTimer *_taskCompletionTimeout;
    COSSetupController *_setupController;
    UIAlertView *_transportReachabilityAlert;
    UIViewController *_selectedController;
    COSGetStartedViewController *_getStartedViewController;
    CADisplayLink *_dl;
    UILabel *_debugLabel;
    CDUnknownBlockType _setupFlowPresentationCompletion;
    SKUIApplicationController *_storeApplicationController;
}

+ (_Bool)hasUpdateAvailable;
+ (_Bool)_shouldUseAlertControllerForLegacyAlerts;
@property(retain, nonatomic) SKUIApplicationController *storeApplicationController; // @synthesize storeApplicationController=_storeApplicationController;
@property unsigned int rootDomainConnect; // @synthesize rootDomainConnect=_rootDomainConnect;
@property(copy, nonatomic) CDUnknownBlockType setupFlowPresentationCompletion; // @synthesize setupFlowPresentationCompletion=_setupFlowPresentationCompletion;
@property(nonatomic) _Bool backgrounded; // @synthesize backgrounded=_backgrounded;
@property(nonatomic) _Bool firstLaunch; // @synthesize firstLaunch=_firstLaunch;
@property(nonatomic) _Bool launchedByNanoRegistry; // @synthesize launchedByNanoRegistry=_launchedByNanoRegistry;
@property(retain, nonatomic) UILabel *debugLabel; // @synthesize debugLabel=_debugLabel;
@property(retain, nonatomic) CADisplayLink *dl; // @synthesize dl=_dl;
@property(retain, nonatomic) COSGetStartedViewController *getStartedViewController; // @synthesize getStartedViewController=_getStartedViewController;
@property(nonatomic) UIViewController *selectedController; // @synthesize selectedController=_selectedController;
@property(retain, nonatomic) UIAlertView *transportReachabilityAlert; // @synthesize transportReachabilityAlert=_transportReachabilityAlert;
@property(retain, nonatomic) COSSetupController *setupController; // @synthesize setupController=_setupController;
@property(retain, nonatomic) NSTimer *taskCompletionTimeout; // @synthesize taskCompletionTimeout=_taskCompletionTimeout;
@property(nonatomic) unsigned long long backgroundTaskID; // @synthesize backgroundTaskID=_backgroundTaskID;
@property(nonatomic) _Bool isLocked; // @synthesize isLocked=_isLocked;
@property(nonatomic) _Bool isUpdatingGizmoInSetupFlow; // @synthesize isUpdatingGizmoInSetupFlow=_isUpdatingGizmoInSetupFlow;
@property(nonatomic) _Bool isResetting; // @synthesize isResetting=_isResetting;
@property(nonatomic) _Bool isActivated; // @synthesize isActivated=_isActivated;
@property(retain, nonatomic) NRDevice *pairedGizmo; // @synthesize pairedGizmo=_pairedGizmo;
@property(retain, nonatomic) PBBridgeCompanionController *bridgeController; // @synthesize bridgeController=_bridgeController;
@property(nonatomic) _Bool syncTrapCompleted; // @synthesize syncTrapCompleted=_syncTrapCompleted;
@property(nonatomic) _Bool syncTrapEnabled; // @synthesize syncTrapEnabled=_syncTrapEnabled;
@property(retain, nonatomic) NPSDomainAccessor *perGizmoBridgeDomain; // @synthesize perGizmoBridgeDomain=_perGizmoBridgeDomain;
@property(readonly, nonatomic) PSSplitViewController *settingsSplitViewController; // @synthesize settingsSplitViewController=_settingsSplitViewController;
@property(readonly, nonatomic) COSPreferencesRootController *settingsController; // @synthesize settingsController=_settingsController;
@property(retain, nonatomic) UIWindow *window; // @synthesize window=_window;
- (void).cxx_destruct;
- (void)presentUnpairingControllerAnimated:(_Bool)arg1;
- (void)tappedStart;
- (void)tappedStartInternal;
- (void)resetFlowForCameraExpiry;
- (void)_cancelBackgroundAssertionTimeout;
- (void)_extendBackgroundAssertion;
- (id)_tabBarItems;
- (void)_networkingStopNotification:(id)arg1;
- (void)_networkingStartNotification:(id)arg1;
- (void)_loadStoreApplicationWithLaunchOptions:(id)arg1;
- (void)application:(id)arg1 evaluateAppJavaScriptInContext:(id)arg2 JSContext:(id)arg3;
- (void)application:(id)arg1 didReselectTabBarItem:(id)arg2;
- (void)applicationDidChangeClientContext:(id)arg1;
- (void)alertView:(id)arg1 clickedButtonAtIndex:(long long)arg2;
- (void)transportBecameUnreachable;
- (void)transportBecameReachable;
- (void)systemDidWake:(id)arg1;
- (void)_deregisterForPowerNotifications;
- (void)_registerForPowerNotifications;
- (void)clearControllersForSuspendedState;
- (void)_clearControllersForSuspendedState:(id)arg1;
- (void)popToRootOfRootController:(id)arg1 SelectGeneral:(_Bool)arg2;
- (id)_rootControllerForSplitViewController:(id)arg1;
- (id)_splitViewControllerForRootController:(id)arg1;
- (id)keyValueDictionaryForURL:(id)arg1;
- (id)getLaunchedByValueForURL:(id)arg1;
- (void)_performURLHandlingForRootListController:(id)arg1 controller:(id)arg2 dictionary:(id)arg3 items:(id)arg4 controllerNeedsPush:(_Bool)arg5;
- (void)_setOffsetForController:(id)arg1 fromObjectPair:(id)arg2;
- (void)processURL:(id)arg1 animated:(_Bool)arg2 fromSearch:(_Bool)arg3;
- (void)processURL:(id)arg1;
- (void)generateURL;
- (id)currentSpecifierIDPath;
- (id)oneTimeJumpURL;
- (void)enteredCompatibilityState:(id)arg1;
- (void)initialPairingFailed:(id)arg1;
- (void)pairingFailed:(id)arg1;
- (void)messageSendFailed:(id)arg1;
- (void)deviceUnpaired:(id)arg1;
- (void)devicePaired:(id)arg1;
- (void)remoteDidFailActivation:(id)arg1 userActionable:(_Bool)arg2;
- (void)remoteDidFailActivation:(id)arg1;
- (void)updateForRemoteActivity:(id)arg1;
- (void)didHandlePerformanceResults;
- (void)connectionDidBecomeInactive;
- (void)connectionDidBecomeActive;
- (void)remoteDidBecomeAvailable;
- (void)disagreeToTerms;
- (void)dismissSetupFlowAnimated:(_Bool)arg1;
- (void)presentSetupFlowAnimated:(_Bool)arg1;
- (void)resetSetupFlowInternalSettings;
- (void)resetSetupFlowAnimated:(_Bool)arg1 forEvent:(unsigned long long)arg2;
- (void)resetPairedUI;
- (void)expireTaskAssertion:(id)arg1;
- (void)dismissSetupFlowComplete:(_Bool)arg1 animated:(_Bool)arg2;
@property(readonly, nonatomic) _Bool isInSetupFlow;
- (id)urlForActivity:(id)arg1;
- (void)badgeTabItemIfNeeded:(id)arg1;
- (void)splitViewControllerDidPopToRootController:(id)arg1;
- (_Bool)splitViewController:(id)arg1 collapseSecondaryViewController:(id)arg2 ontoPrimaryViewController:(id)arg3;
- (id)splitViewController:(id)arg1 separateSecondaryViewControllerFromPrimaryViewController:(id)arg2;
- (void)loadSettingsController;
- (void)resetPerGizmoBridgeDomainIfNeeded;
- (void)retriggerNRAlertIfNeeded;
- (_Bool)application:(id)arg1 openURL:(id)arg2 sourceApplication:(id)arg3 annotation:(id)arg4;
- (void)applicationDidResumeForEventsOnly;
- (void)applicationWillSuspendForEventsOnly;
- (void)applicationWillResignActive:(id)arg1;
- (id)_appSuspendStateDescription;
- (void)checkIfNRRetriggerConditions;
- (void)applicationDidBecomeActive:(id)arg1;
- (void)applicationWillEnterForeground:(id)arg1;
- (void)applicationDidEnterBackground:(id)arg1;
- (void)applicationWillTerminate:(id)arg1;
- (void)tick:(id)arg1;
- (void)_showSettingsUI;
- (_Bool)application:(id)arg1 didFinishLaunchingWithOptions:(id)arg2;
- (_Bool)application:(id)arg1 willFinishLaunchingWithOptions:(id)arg2;
- (void)application:(id)arg1 didUpdateUserActivity:(id)arg2;
- (void)application:(id)arg1 didFailToContinueUserActivityWithType:(id)arg2 error:(id)arg3;
- (_Bool)application:(id)arg1 continueUserActivity:(id)arg2 restorationHandler:(CDUnknownBlockType)arg3;
- (_Bool)application:(id)arg1 willContinueUserActivityWithType:(id)arg2;
- (unsigned long long)application:(id)arg1 supportedInterfaceOrientationsForWindow:(id)arg2;
- (void)dealloc;
- (id)init;
- (void)clearBridgeSettingsTabBarItemBadge;
- (id)bridgeSettingsTabBarItem;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

