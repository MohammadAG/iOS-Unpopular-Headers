//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class NPSDomainAccessor, NSDictionary, NSMutableDictionary, NSObject<OS_dispatch_queue>, NSString;

@interface SPApplicationManager : NSObject
{
    _Bool _newGizmo;
    _Bool _domainVerified;
    _Bool _appsCacheValid;
    _Bool _glancesCacheValid;
    _Bool _appsWithNotificationsCacheValid;
    long long _installationMode;
    NSString *_currentXcodeControlledPlugin;
    NPSDomainAccessor *_watchKitAppsDomain;
    NSMutableDictionary *_continuouslyDiscoveredPlugins;
    CDUnknownBlockType _pluginsFoundBlock;
    NSObject<OS_dispatch_queue> *_pkPluginManagementQueue;
    NSObject<OS_dispatch_queue> *_pkPluginCompletionQueue;
    NSObject<OS_dispatch_queue> *_appInstallationQueue;
    NSObject<OS_dispatch_queue> *_pkPluginBeginUsingTimerQueue;
    NSMutableDictionary *_pkPluginBeginUsingTimers;
    id _wkContinuousDiscoveryToken;
    id _domainUpdateLock;
    unsigned long long _userVolumeBlockSize;
    NSDictionary *_appsCache;
    NSDictionary *_glancesCache;
    NSDictionary *_appsWithNotificationsCache;
    NSDictionary *_gizmoDomainCache;
}

+ (id)sha1:(id)arg1;
+ (id)bundleHash:(id)arg1;
+ (id)sharedInstance;
@property(retain, nonatomic) NSDictionary *gizmoDomainCache; // @synthesize gizmoDomainCache=_gizmoDomainCache;
@property(retain, nonatomic) NSDictionary *appsWithNotificationsCache; // @synthesize appsWithNotificationsCache=_appsWithNotificationsCache;
@property(retain, nonatomic) NSDictionary *glancesCache; // @synthesize glancesCache=_glancesCache;
@property(retain, nonatomic) NSDictionary *appsCache; // @synthesize appsCache=_appsCache;
@property _Bool appsWithNotificationsCacheValid; // @synthesize appsWithNotificationsCacheValid=_appsWithNotificationsCacheValid;
@property _Bool glancesCacheValid; // @synthesize glancesCacheValid=_glancesCacheValid;
@property _Bool appsCacheValid; // @synthesize appsCacheValid=_appsCacheValid;
@property(nonatomic) unsigned long long userVolumeBlockSize; // @synthesize userVolumeBlockSize=_userVolumeBlockSize;
@property(retain, nonatomic) id domainUpdateLock; // @synthesize domainUpdateLock=_domainUpdateLock;
@property(retain, nonatomic) id wkContinuousDiscoveryToken; // @synthesize wkContinuousDiscoveryToken=_wkContinuousDiscoveryToken;
@property(retain, nonatomic) NSMutableDictionary *pkPluginBeginUsingTimers; // @synthesize pkPluginBeginUsingTimers=_pkPluginBeginUsingTimers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginBeginUsingTimerQueue; // @synthesize pkPluginBeginUsingTimerQueue=_pkPluginBeginUsingTimerQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *appInstallationQueue; // @synthesize appInstallationQueue=_appInstallationQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginCompletionQueue; // @synthesize pkPluginCompletionQueue=_pkPluginCompletionQueue;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *pkPluginManagementQueue; // @synthesize pkPluginManagementQueue=_pkPluginManagementQueue;
@property(copy, nonatomic) CDUnknownBlockType pluginsFoundBlock; // @synthesize pluginsFoundBlock=_pluginsFoundBlock;
@property(retain, nonatomic) NSMutableDictionary *continuouslyDiscoveredPlugins; // @synthesize continuouslyDiscoveredPlugins=_continuouslyDiscoveredPlugins;
@property _Bool domainVerified; // @synthesize domainVerified=_domainVerified;
@property _Bool newGizmo; // @synthesize newGizmo=_newGizmo;
@property(retain, nonatomic) NPSDomainAccessor *watchKitAppsDomain; // @synthesize watchKitAppsDomain=_watchKitAppsDomain;
@property(copy) NSString *currentXcodeControlledPlugin; // @synthesize currentXcodeControlledPlugin=_currentXcodeControlledPlugin;
@property long long installationMode; // @synthesize installationMode=_installationMode;
- (void).cxx_destruct;
- (id)applicationInfo:(id)arg1;
- (void)updateApplicationInfo:(id)arg1 key:(id)arg2 data:(id)arg3;
- (id)showOnWatchForApplicationWithInfo:(id)arg1;
- (void)notifyInactiveForPluginWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)notifyActiveForPluginWithIdentifier:(id)arg1;
- (void)showUserAlertWithTitle:(id)arg1 message:(id)arg2;
- (void)markPluginWithIdentifierNeedsBeginUsing:(id)arg1;
- (void)setAlwaysInstall:(id)arg1;
- (_Bool)alwaysInstall;
- (void)discoverPlugInForIdentifier:(id)arg1 found:(CDUnknownBlockType)arg2;
- (void)discoverAllPlugIns:(CDUnknownBlockType)arg1;
- (void)updateCoreDuetSession:(id)arg1;
- (_Bool)isNewGizmo;
- (_Bool)isInstalledByXCode:(id)arg1;
- (id)bundleTimeStamp:(id)arg1;
- (_Bool)gizmoApplicationIsInstallCandidate:(id)arg1 applicationInfo:(id)arg2;
- (id)gizmoApplicationsWithPluginProxy:(id)arg1;
- (id)gizmoApplicationsWithContainerBundleID:(id)arg1;
- (void)applicationInfoWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)applicationInstallationInfoWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)pluginUrlWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (id)gizmoApplicationIcons:(id)arg1;
- (id)gizmoAppBundleUrlWithPluginUrl:(id)arg1;
- (id)installStatusForApplicationWithIdentifier:(id)arg1;
- (void)updateInstallStatusForApplicationWithIdentifier:(id)arg1 status:(id)arg2 message:(id)arg3;
- (void)showOnWatchApplicationWithIdentifier:(id)arg1 show:(id)arg2;
- (void)removeApplicationInfoEntryWithIdentifier:(id)arg1;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithWatchAppIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchWatchAppBundleURLWithinCompanionAppWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchApplicationWithContainingApplicationBundleID:(id)arg1 completion:(CDUnknownBlockType)arg2;
- (void)fetchInstalledAppsWithNotificationWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchInstalledGlancesWithCompletion:(CDUnknownBlockType)arg1;
- (void)fetchInstalledApplicationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateGizmoPersistentDomainWithCompletion:(CDUnknownBlockType)arg1;
- (id)getInstalledApplications;
- (void)updateGizmoApplicationsWithCompletion:(CDUnknownBlockType)arg1;
- (void)updateApplicationInfoWithPluginProxy:(id)arg1 applicationInfo:(id)arg2;
- (id)createGizmoApplicationInfoWithPluginProxy:(id)arg1;
- (id)identifierForPlugin:(id)arg1;
- (id)identifierForPluginProxy:(id)arg1;
- (id)settingsBundlePathForPlugin:(id)arg1;
- (_Bool)isCustomNotificationAvailableInGizmoApplication:(id)arg1;
- (_Bool)isGlanceAvailableInGizmoApplication:(id)arg1;
- (id)localizedNameForContainerApplication:(id)arg1;
- (id)localizedApplicationNameForBundle:(id)arg1;
- (id)identifiersForInstalledPlugins;
- (id)pluginIdentifierForProtocolIdentifier:(id)arg1;
- (id)gizmoApplicationInfoWithIdentifier:(id)arg1;
- (id)gizmoApplicationInfo:(id)arg1;
- (void)setGizmoPersistentDomain:(id)arg1;
- (id)gizmoPersistentDomain;
- (void)syncApplications:(id)arg1;
- (void)handleInstallWatchKitAppsNotification;
- (void)readSetupSettings;
- (void)getOrBeginActivePlugInForApplication:(id)arg1 setupBlock:(CDUnknownBlockType)arg2 completion:(CDUnknownBlockType)arg3;
- (void)beginUsingPlugin:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;
- (void)waitForPreviousPluginToFinishEnding:(id)arg1 toComplete:(CDUnknownBlockType)arg2;
- (void)callEndUsingCompletionsForPluginWithIdentifier:(id)arg1;
- (void)registerForContinuousPluginDiscovery;
- (id)init;

@end

